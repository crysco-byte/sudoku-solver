{
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/tests/1_unit-tests.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/tests/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/tests/1_unit-tests.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/tests/1_unit-tests.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/tests/1_unit-tests.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/tests/",
        "sourceFileName": "1_unit-tests.js"
      }
    },
    "ast": null,
    "code": "const chai = require(\"chai\");\n\nconst assert = chai.assert;\n\nconst Solver = require(\"../controllers/sudoku-solver.js\");\n\nconst puzzlesAndSolutions = require(\"../controllers/puzzle-strings\");\n\nsuite(\"UnitTests\", () => {\n  suite(\"Function validate(puzzleString)\", function () {\n    test(\"logic handles a valid puzzle string of 81 characters\", function (done) {\n      let puzzleAndSolution = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      let puzzle = puzzleAndSolution[0];\n      assert.equal(Solver.isValidPuzzleString(puzzle), true);\n      done();\n    });\n    test(\"logic handles a puzzle string with invalid characters (not 1-9 or .\", function (done) {\n      let input = \"1.5d.2.84..63h12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\";\n      assert.equal(Solver.isValidPuzzleString(input), \"Invalid characters in puzzle\");\n      done();\n    });\n    test(\"logic handles a puzzle string that is not 81 characters in length\", function (done) {\n      let input = \"1.5d.2.84..63h12.7.2..5.....9..1....8.2.3674.3.7.2..9.47....8..1..16....926914.37.\";\n      assert.equal(input.length, 82);\n      assert.equal(Solver.isValidPuzzleString(input), \"Expected puzzle to be 81 characters long\");\n      done();\n    });\n  });\n  suite(\"Function solve(puzzleString)\", function () {\n    test(\"Valid puzzle strings pass the solver\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      let solution = \"135762984946381257728459613694517832812936745357824196473298561581673429269145378\";\n      input = input[0].split(\",\");\n      input = input[0];\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.getSolvedPuzzleString();\n      assert.equal(result, solution);\n      done();\n    });\n    test(\"inValid puzzle strings fail the solver\", function (done) {\n      let input = \"9.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\";\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.solve();\n      assert.equal(result, false);\n      done();\n    });\n    test(\"Solver returns the expected solution for an incomplete puzzle\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      let solution = \"135762984946381257728459613694517832812936745357824196473298561581673429269145378\";\n      input = input[0].split(\",\");\n      input = input[0];\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.getSolvedPuzzleString();\n      assert.equal(result, solution);\n      done();\n    });\n  });\n  suite(\"Function checkRowPlacement(puzzleString, row, column, value)\", function () {\n    test(\"logic handles a valid row placement\", function (done) {\n      let puzzleAndSolution = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      let puzzle = puzzleAndSolution[0];\n      let grid = Solver.convertToGrid(puzzle);\n      let solver = new Solver(grid);\n      let result = solver.isRightValueViaCoordinate(\"B\", 2, 4);\n      assert.equal(result, true);\n      done();\n    });\n    test(\"logic handles an invalid row placement\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      input = input[0].split(\",\");\n      input = input[0];\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.isRightValueViaCoordinate(\"B\", 2, 7);\n      assert.equal(result, false);\n      done();\n    });\n  });\n  suite(\"Function checkColPlacement(puzzleString,row,column,value)\", function () {\n    test(\"logic handles a valid column placement\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[2];\n      input = input[0].split(\",\");\n      input = input[0];\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.isRightValueViaCoordinate(\"B\", 5, 8);\n      assert.equal(result, true);\n      done();\n    });\n    test(\"logic handles a invalid column placement\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[2];\n      input = input[0].split(\",\");\n      input = input[0];\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.isRightValueViaCoordinate(\"B\", 5, 4);\n      assert.equal(result, false);\n      done();\n    });\n  });\n  suite(\"Function checkRegionPlacement(puzzleString,row,column,value\", function () {\n    test(\"logic handles a valid region(3x3 grid) placement\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      input = input[0].split(\",\");\n      input = input[0];\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.isRightValueViaCoordinate(\"B\", 8, 5);\n      assert.equal(result, true);\n      done();\n    });\n    test(\"logic handles an invalid region(3x3 grid) placement\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      input = input[0].split(\",\");\n      input = input[0];\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.isRightValueViaCoordinate(\"B\", 8, 8);\n      assert.equal(result, false);\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "1_unit-tests.js"
      ],
      "names": [
        "chai",
        "require",
        "assert",
        "Solver",
        "puzzlesAndSolutions",
        "suite",
        "test",
        "done",
        "puzzleAndSolution",
        "puzzle",
        "equal",
        "isValidPuzzleString",
        "input",
        "length",
        "solution",
        "split",
        "grid",
        "convertToGrid",
        "solver",
        "result",
        "getSolvedPuzzleString",
        "solve",
        "isRightValueViaCoordinate"
      ],
      "mappings": "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",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/tests/",
      "sourcesContent": [
        "const chai = require(\"chai\");\nconst assert = chai.assert;\n\nconst Solver = require(\"../controllers/sudoku-solver.js\");\nconst puzzlesAndSolutions = require(\"../controllers/puzzle-strings\");\n\nsuite(\"UnitTests\", () => {\n  suite(\"Function validate(puzzleString)\", function () {\n    test(\"logic handles a valid puzzle string of 81 characters\", function (done) {\n      let puzzleAndSolution = puzzlesAndSolutions.puzzlesAndSolutions[0];\n\n      let puzzle = puzzleAndSolution[0];\n\n      assert.equal(Solver.isValidPuzzleString(puzzle), true);\n      done();\n    });\n\n    test(\"logic handles a puzzle string with invalid characters (not 1-9 or .\", function (done) {\n      let input =\n        \"1.5d.2.84..63h12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\";\n      assert.equal(\n        Solver.isValidPuzzleString(input),\n        \"Invalid characters in puzzle\"\n      );\n      done();\n    });\n\n    test(\"logic handles a puzzle string that is not 81 characters in length\", function (done) {\n      let input =\n        \"1.5d.2.84..63h12.7.2..5.....9..1....8.2.3674.3.7.2..9.47....8..1..16....926914.37.\";\n      assert.equal(input.length, 82);\n      assert.equal(\n        Solver.isValidPuzzleString(input),\n        \"Expected puzzle to be 81 characters long\"\n      );\n      done();\n    });\n  });\n\n  suite(\"Function solve(puzzleString)\", function () {\n    test(\"Valid puzzle strings pass the solver\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      let solution =\n        \"135762984946381257728459613694517832812936745357824196473298561581673429269145378\";\n      input = input[0].split(\",\");\n      input = input[0];\n\n      let grid = Solver.convertToGrid(input);\n\n      let solver = new Solver(grid);\n      let result = solver.getSolvedPuzzleString();\n      assert.equal(result, solution);\n      done();\n    });\n\n    test(\"inValid puzzle strings fail the solver\", function (done) {\n      let input =\n        \"9.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\";\n\n      let grid = Solver.convertToGrid(input);\n\n      let solver = new Solver(grid);\n      let result = solver.solve();\n      assert.equal(result, false);\n      done();\n    });\n\n    test(\"Solver returns the expected solution for an incomplete puzzle\", function (done) {\n      let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n      let solution =\n        \"135762984946381257728459613694517832812936745357824196473298561581673429269145378\";\n      input = input[0].split(\",\");\n      input = input[0];\n\n      let grid = Solver.convertToGrid(input);\n      let solver = new Solver(grid);\n      let result = solver.getSolvedPuzzleString();\n      assert.equal(result, solution);\n      done();\n    });\n  });\n\n  suite(\n    \"Function checkRowPlacement(puzzleString, row, column, value)\",\n    function () {\n      test(\"logic handles a valid row placement\", function (done) {\n        let puzzleAndSolution = puzzlesAndSolutions.puzzlesAndSolutions[0];\n\n        let puzzle = puzzleAndSolution[0];\n\n        let grid = Solver.convertToGrid(puzzle);\n        let solver = new Solver(grid);\n\n        let result = solver.isRightValueViaCoordinate(\"B\", 2, 4);\n        assert.equal(result, true);\n        done();\n      });\n\n      test(\"logic handles an invalid row placement\", function (done) {\n        let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n        input = input[0].split(\",\");\n        input = input[0];\n\n        let grid = Solver.convertToGrid(input);\n        let solver = new Solver(grid);\n\n        let result = solver.isRightValueViaCoordinate(\"B\", 2, 7);\n        assert.equal(result, false);\n        done();\n      });\n    }\n  );\n\n  suite(\n    \"Function checkColPlacement(puzzleString,row,column,value)\",\n    function () {\n      test(\"logic handles a valid column placement\", function (done) {\n        let input = puzzlesAndSolutions.puzzlesAndSolutions[2];\n        input = input[0].split(\",\");\n        input = input[0];\n        let grid = Solver.convertToGrid(input);\n        let solver = new Solver(grid);\n\n        let result = solver.isRightValueViaCoordinate(\"B\", 5, 8);\n        assert.equal(result, true);\n        done();\n      });\n\n      test(\"logic handles a invalid column placement\", function (done) {\n        let input = puzzlesAndSolutions.puzzlesAndSolutions[2];\n        input = input[0].split(\",\");\n        input = input[0];\n        let grid = Solver.convertToGrid(input);\n        let solver = new Solver(grid);\n\n        let result = solver.isRightValueViaCoordinate(\"B\", 5, 4);\n        assert.equal(result, false);\n        done();\n      });\n    }\n  );\n\n  suite(\n    \"Function checkRegionPlacement(puzzleString,row,column,value\",\n    function () {\n      test(\"logic handles a valid region(3x3 grid) placement\", function (done) {\n        let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n        input = input[0].split(\",\");\n        input = input[0];\n        let grid = Solver.convertToGrid(input);\n        let solver = new Solver(grid);\n\n        let result = solver.isRightValueViaCoordinate(\"B\", 8, 5);\n        assert.equal(result, true);\n        done();\n      });\n\n      test(\"logic handles an invalid region(3x3 grid) placement\", function (done) {\n        let input = puzzlesAndSolutions.puzzlesAndSolutions[0];\n        input = input[0].split(\",\");\n        input = input[0];\n        let grid = Solver.convertToGrid(input);\n        let solver = new Solver(grid);\n\n        let result = solver.isRightValueViaCoordinate(\"B\", 8, 8);\n        assert.equal(result, false);\n        done();\n      });\n    }\n  );\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615923224874
  },
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/controllers/sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/controllers/sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/controllers/sudoku-solver.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/controllers/sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/controllers/",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "class Solver {\n  static convertToGrid(puzzleString, divider = 9) {\n    let grid = [];\n\n    for (let i = 0; i < puzzleString.length; i += divider) {\n      for (let j = 0; j < divider; j++) {\n        grid.push(puzzleString.slice(i, i + divider).split(\"\"));\n        break;\n      }\n    }\n\n    return grid;\n  }\n\n  static isValidPuzzleString(puzzleString) {\n    if (puzzleString.length !== 81) {\n      return \"Expected puzzle to be 81 characters long\";\n    }\n\n    let regexSudoku = /[^1-9\\.]/;\n    let validationResult = regexSudoku.exec(puzzleString);\n\n    if (validationResult) {\n      return \"Invalid characters in puzzle\";\n    }\n\n    return true;\n  }\n\n  static argumentValidator(row, col, value) {\n    let rowNames = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n    const pattern = /^[1-9]$/;\n\n    if (!pattern.exec(value)) {\n      return \"Invalid value\";\n    }\n\n    if (!rowNames.includes(row)) {\n      return \"Invalid coordinate\";\n    }\n\n    if (!pattern.exec(col)) {\n      return \"Invalid coordinate\";\n    }\n\n    return true;\n  }\n\n  constructor(grid = []) {\n    this.orginalGrid = grid;\n    this.solved = false;\n    this.grid = this.copyFromOriginalGrid();\n  }\n\n  copyFromOriginalGrid() {\n    return Solver.convertToGrid(this.orginalGrid.flat().join(\"\"));\n  }\n\n  getOriginalGrid() {\n    return this.orginalGrid;\n  }\n\n  getGrid() {\n    return this.grid;\n  }\n\n  isValid(row, col, k) {\n    this.isValidResult = {};\n    let conflictRow = false;\n    let conflictCol = false;\n    let conflictGrid = false;\n\n    for (let i = 0; i < 9; i++) {\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n      const n = 3 * Math.floor(col / 3) + i % 3;\n      conflictRow = this.grid[row][i] == k && col != i;\n      conflictCol = this.grid[i][col] == k && row != i;\n      conflictGrid = this.grid[m][n] == k && col != i && row != i;\n\n      if (conflictRow || conflictCol || conflictGrid) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  solve() {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.grid[i][j] == \".\") {\n          for (let k = 1; k <= 9; k++) {\n            if (this.isValid(i, j, k)) {\n              this.grid[i][j] = `${k}`;\n\n              if (this.solve(this.grid)) {\n                return true;\n              } else {\n                this.grid[i][j] = \".\";\n              }\n            }\n          }\n\n          return false;\n        }\n      }\n    }\n\n    this.solved = true;\n    return true;\n  }\n\n  getSolvedPuzzleString(refresh = false) {\n    if (refresh) {\n      this.solved = false;\n      this.grid = this.copyFromOriginalGrid();\n      this.isValidResult = {};\n    }\n\n    if (this.solved) {\n      return this.grid.flat().join(\"\");\n    }\n\n    if (this.solve()) {\n      return this.getSolvedPuzzleString();\n    }\n\n    return \"Something Error\";\n  }\n\n  isRightValueViaCoordinate(rowName, col, value) {\n    const rowNames = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n    let row = rowNames.indexOf(rowName);\n    return this.isRightValue(row, col - 1, value);\n  }\n\n  isRightValue(row, col, value) {\n    if (!this.solved) {\n      this.solve();\n    }\n\n    this.isValidResult = {};\n    let conflictRow = false;\n    let conflictCol = false;\n    let conflictGrid = false;\n\n    for (let i = 0; i < 9; i++) {\n      if (this.grid[row][i] == value && col != i) {\n        conflictRow = true;\n        break;\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      if (this.grid[i][col] == value && row != i) {\n        conflictCol = true;\n        break;\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n      const n = 3 * Math.floor(col / 3) + i % 3;\n\n      if (this.grid[m][n] == value && m != row && n != col - 1) {\n        conflictGrid = true;\n        break;\n      }\n    }\n\n    if (conflictRow || conflictCol || conflictGrid) {\n      this.isValidResult = {\n        conflictRow: conflictRow,\n        conflictCol: conflictCol,\n        conflictGrid: conflictGrid\n      };\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\nmodule.exports = Solver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "Solver",
        "convertToGrid",
        "puzzleString",
        "divider",
        "grid",
        "i",
        "length",
        "j",
        "push",
        "slice",
        "split",
        "isValidPuzzleString",
        "regexSudoku",
        "validationResult",
        "exec",
        "argumentValidator",
        "row",
        "col",
        "value",
        "rowNames",
        "pattern",
        "includes",
        "constructor",
        "orginalGrid",
        "solved",
        "copyFromOriginalGrid",
        "flat",
        "join",
        "getOriginalGrid",
        "getGrid",
        "isValid",
        "k",
        "isValidResult",
        "conflictRow",
        "conflictCol",
        "conflictGrid",
        "m",
        "Math",
        "floor",
        "n",
        "solve",
        "getSolvedPuzzleString",
        "refresh",
        "isRightValueViaCoordinate",
        "rowName",
        "indexOf",
        "isRightValue",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/controllers/",
      "sourcesContent": [
        "class Solver {\n  static convertToGrid(puzzleString, divider = 9) {\n    let grid = [];\n\n    for (let i = 0; i < puzzleString.length; i += divider) {\n      for (let j = 0; j < divider; j++) {\n        grid.push(puzzleString.slice(i, i + divider).split(\"\"));\n        break;\n      }\n    }\n\n    return grid;\n  }\n\n  static isValidPuzzleString(puzzleString) {\n    if (puzzleString.length !== 81) {\n      return \"Expected puzzle to be 81 characters long\";\n    }\n\n    let regexSudoku = /[^1-9\\.]/;\n    let validationResult = regexSudoku.exec(puzzleString);\n\n    if (validationResult) {\n      return \"Invalid characters in puzzle\";\n    }\n    return true;\n  }\n\n  static argumentValidator(row, col, value) {\n    let rowNames = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n    const pattern = /^[1-9]$/;\n    if (!pattern.exec(value)) {\n      return \"Invalid value\";\n    }\n\n    if (!rowNames.includes(row)) {\n      return \"Invalid coordinate\";\n    }\n\n    if (!pattern.exec(col)) {\n      return \"Invalid coordinate\";\n    }\n    return true;\n  }\n\n  constructor(grid = []) {\n    this.orginalGrid = grid;\n\n    this.solved = false;\n    this.grid = this.copyFromOriginalGrid();\n  }\n\n  copyFromOriginalGrid() {\n    return Solver.convertToGrid(this.orginalGrid.flat().join(\"\"));\n  }\n\n  getOriginalGrid() {\n    return this.orginalGrid;\n  }\n\n  getGrid() {\n    return this.grid;\n  }\n\n  isValid(row, col, k) {\n    this.isValidResult = {};\n    let conflictRow = false;\n    let conflictCol = false;\n    let conflictGrid = false;\n\n    for (let i = 0; i < 9; i++) {\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n      const n = 3 * Math.floor(col / 3) + (i % 3);\n\n      conflictRow = this.grid[row][i] == k && col != i;\n      conflictCol = this.grid[i][col] == k && row != i;\n      conflictGrid = this.grid[m][n] == k && col != i && row != i;\n\n      if (conflictRow || conflictCol || conflictGrid) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  solve() {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.grid[i][j] == \".\") {\n          for (let k = 1; k <= 9; k++) {\n            if (this.isValid(i, j, k)) {\n              this.grid[i][j] = `${k}`;\n              if (this.solve(this.grid)) {\n                return true;\n              } else {\n                this.grid[i][j] = \".\";\n              }\n            }\n          }\n          return false;\n        }\n      }\n    }\n\n    this.solved = true;\n    return true;\n  }\n\n  getSolvedPuzzleString(refresh = false) {\n    if (refresh) {\n      this.solved = false;\n      this.grid = this.copyFromOriginalGrid();\n      this.isValidResult = {};\n    }\n\n    if (this.solved) {\n      return this.grid.flat().join(\"\");\n    }\n\n    if (this.solve()) {\n      return this.getSolvedPuzzleString();\n    }\n\n    return \"Something Error\";\n  }\n\n  isRightValueViaCoordinate(rowName, col, value) {\n    const rowNames = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n    let row = rowNames.indexOf(rowName);\n    return this.isRightValue(row, col - 1, value);\n  }\n\n  isRightValue(row, col, value) {\n    if (!this.solved) {\n      this.solve();\n    }\n\n    this.isValidResult = {};\n    let conflictRow = false;\n    let conflictCol = false;\n    let conflictGrid = false;\n\n    for (let i = 0; i < 9; i++) {\n      if (this.grid[row][i] == value && col != i) {\n        conflictRow = true;\n        break;\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      if (this.grid[i][col] == value && row != i) {\n        conflictCol = true;\n        break;\n      }\n    }\n\n\n    for (let i = 0; i < 9; i++) {\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n      const n = 3 * Math.floor(col / 3) + (i % 3);\n\n      if (this.grid[m][n] == value && m != row && n != col - 1) {\n        conflictGrid = true;\n        break;\n      }\n    }\n\n    if (conflictRow || conflictCol || conflictGrid) {\n      this.isValidResult = {\n        conflictRow: conflictRow,\n        conflictCol: conflictCol,\n        conflictGrid: conflictGrid,\n      };\n      return false;\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = Solver;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615923015714
  },
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/controllers/puzzle-strings.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/controllers/puzzle-strings.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/controllers/puzzle-strings.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/controllers/puzzle-strings.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/controllers/",
        "sourceFileName": "puzzle-strings.js"
      }
    },
    "ast": null,
    "code": "exports.puzzlesAndSolutionsn//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1enpsZS1zdHJpbmdzLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJwdXp6bGVzQW5kU29sdXRpb25zIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTyxDQUFDQyxtQkFBUixHQUE4QixDQUM1QixDQUNFLG1GQURGLEVBRUUsbUZBRkYsQ0FENEIsRUFLNUIsQ0FDRSxtRkFERixFQUVFLG1GQUZGLENBTDRCLEVBUzVCLENBQ0UsbUZBREYsRUFFRSxtRkFGRixDQVQ0QixFQWE1QixDQUNFLG1GQURGLEVBRUUsbUZBRkYsQ0FiNEIsRUFpQjVCLENBQ0UsbUZBREYsRUFFRSxtRkFGRixDQWpCNEIsQ0FBOUIiLCJzb3VyY2VSb290IjoiL2hvbWUvZGVsdXhlL0RvY3VtZW50cy9wcm9ncmFtcy9zdWRva3Utc29sdmVyL2NvbnRyb2xsZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMucHV6emxlc0FuZFNvbHV0aW9ucyA9IFtcbiAgW1xuICAgICcxLjUuLjIuODQuLjYzLjEyLjcuMi4uNS4uLi4uOS4uMS4uLi44LjIuMzY3NC4zLjcuMi4uOS40Ny4uLjguLjEuLjE2Li4uLjkyNjkxNC4zNy4nLFxuICAgICcxMzU3NjI5ODQ5NDYzODEyNTc3Mjg0NTk2MTM2OTQ1MTc4MzI4MTI5MzY3NDUzNTc4MjQxOTY0NzMyOTg1NjE1ODE2NzM0MjkyNjkxNDUzNzgnXG4gIF0sXG4gIFtcbiAgICAnNS4uOTEzNzIuMy4uLjguNS45LjkuMjUuLjguNjguNDcuMjMuLi45NS4uNDYuNy40Li4uLi41LjIuLi4uLi4uNC4uODkxNi4uODUuNzIuLi4zJyxcbiAgICAnNTY4OTEzNzI0MzQyNjg3NTE5MTk3MjU0Mzg2Njg1NDc5MjMxMjE5NTM4NDY3NzM0MTYyODk1OTI2MzQ1MTc4NDczODkxNjUyODUxNzI2OTQzJ1xuICBdLFxuICBbXG4gICAgJy4uODM5LjcuNTc1Li4uLi45NjQuLjEuLi4uLi4uMTYuMjk4NDYuOS4zMTIuNy4uNzU0Li4uLi42Mi4uNS43OC44Li4uMy4yLi4uNDkyLi4uMScsXG4gICAgJzIxODM5Njc0NTc1MzI4NDE5NjQ5NjE1NzgzMjUzMTY3Mjk4NDY0OTgzMTI1NzgyNzU0OTYxMzk2MjQxNTM3ODE4NTc2MzQyOTM3NDkyODU2MSdcbiAgXSxcbiAgW1xuICAgICcuNy44OS4uLi4uNS4uLi4zLjQuMi4uNC4uMS41Njg5Li40NzIuLi42Li4uLi4xLjcuNS42Mzg3My4xLjIuOC42Li40Ny4xLi4yLjkuMzg3LjYnLFxuICAgICc0NzM4OTEyNjU4NTE3MjYzOTQ5MjYzNDU4MTc1Njg5MTM0NzIzNDI2ODc5NTExOTcyNTQ2Mzg3MzQxNjI1ODk2ODU0NzkxMjMyMTk1Mzg3NDYnXG4gIF0sXG4gIFtcbiAgICAnODIuLjQuLjYuLi4xNi4uODkuLi45ODMxNS43NDkuMTU3Li4uLi4uLi4uLi4uLjUzLi40Li4uOTYuNDE1Li44MS4uNzYzMi4uMy4uLjI4LjUxJyxcbiAgICAnODI3NTQ5MTYzNTMxNjcyODk0NjQ5ODMxNTI3NDk2MTU3MzgyMjE4Mzk2NDc1NzUzMjg0OTE2OTYyNDE1NzM4MTg1NzYzMjQ5Mzc0OTI4NjUxJ1xuICBdXG5dO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "puzzle-strings.js"
      ],
      "names": [
        "exports",
        "puzzlesAndSolutions"
      ],
      "mappings": "AAAAA,OAAO,CAACC,mBAAR,GAA8B,CAC5B,CACE,mFADF,EAEE,mFAFF,CAD4B,EAK5B,CACE,mFADF,EAEE,mFAFF,CAL4B,EAS5B,CACE,mFADF,EAEE,mFAFF,CAT4B,EAa5B,CACE,mFADF,EAEE,mFAFF,CAb4B,EAiB5B,CACE,mFADF,EAEE,mFAFF,CAjB4B,CAA9B",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/controllers/",
      "sourcesContent": [
        "exports.puzzlesAndSolutions = [\n  [\n    '1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.',\n    '135762984946381257728459613694517832812936745357824196473298561581673429269145378'\n  ],\n  [\n    '5..91372.3...8.5.9.9.25..8.68.47.23...95..46.7.4.....5.2.......4..8916..85.72...3',\n    '568913724342687519197254386685479231219538467734162895926345178473891652851726943'\n  ],\n  [\n    '..839.7.575.....964..1.......16.29846.9.312.7..754.....62..5.78.8...3.2...492...1',\n    '218396745753284196496157832531672984649831257827549613962415378185763429374928561'\n  ],\n  [\n    '.7.89.....5....3.4.2..4..1.5689..472...6.....1.7.5.63873.1.2.8.6..47.1..2.9.387.6',\n    '473891265851726394926345817568913472342687951197254638734162589685479123219538746'\n  ],\n  [\n    '82..4..6...16..89...98315.749.157.............53..4...96.415..81..7632..3...28.51',\n    '827549163531672894649831527496157382218396475753284916962415738185763249374928651'\n  ]\n];\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615923171545
  },
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/tests/2_functional-tests.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/tests/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/tests/2_functional-tests.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/tests/2_functional-tests.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/tests/2_functional-tests.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/tests/",
        "sourceFileName": "2_functional-tests.js"
      }
    },
    "ast": null,
    "code": "const chai = require(\"chai\");\n\nconst chaiHttp = require(\"chai-http\");\n\nconst assert = chai.assert;\n\nconst server = require(\"../server\");\n\nchai.use(chaiHttp);\nsuite(\"Functional Tests\", () => {\n  test(\"Solve a puzzle with valid puzzle string: POST request to /api/solve\", done => {\n    chai.request(server).post(\"/api/solve\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.solution, \"135762984946381257728459613694517832812936745357824196473298561581673429269145378\");\n      done();\n    });\n  });\n  test(\"Solve a puzzle with missing puzzle string: POST reguest to /api/solve\", done => {\n    chai.request(server).post(\"/api/solve\").send({}).end(function (err, res) {\n      assert.equal(res.body.error, \"Required field missing\");\n      assert.equal(res.status, 200);\n      done();\n    });\n  });\n  test(\"Solve a puzzle with invalid characters: POST request to /api/solve\", done => {\n    chai.request(server).post(\"/api/solve\").send({\n      puzzle: \"1.5.?2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Invalid characters in puzzle\");\n      done();\n    });\n  });\n  test(\"Solve a puzzle with incorrect length: POST request to /api/solve\", done => {\n    chai.request(server).post(\"/api/solve\").send({\n      puzzle: \"1.5.?2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....92691423.37.\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Expected puzzle to be 81 characters long\");\n      done();\n    });\n  });\n  test(\"Solve a puzzle that cannot be solved: POST request to /api/solve\", done => {\n    chai.request(server).post(\"/api/solve\").send({\n      puzzle: \"9.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Puzzle cannot be solved\");\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with all fields: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      coordinate: \"A2\",\n      value: 3\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.valid, true);\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with single placement conflict: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      coordinate: \"A2\",\n      value: 4\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.valid, false);\n      assert.equal(res.body.conflict[0], \"row\");\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with multiple placement conflict: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      coordinate: \"A2\",\n      value: 2\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.valid, false);\n      assert.equal(res.body.conflict[0], \"row\");\n      assert.equal(res.body.conflict[1], \"column\");\n      assert.equal(res.body.conflict[2], \"region\");\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with all placement conflict: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      coordinate: \"A2\",\n      value: 2\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.valid, false);\n      assert.equal(res.body.conflict[0], \"row\");\n      assert.equal(res.body.conflict[1], \"column\");\n      assert.equal(res.body.conflict[2], \"region\");\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with missing required fields: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      coordinate: \"A2\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Required field(s) missing\");\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with invalid characters: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5.?2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      coordinate: \"A2\",\n      value: 3\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Invalid characters in puzzle\");\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with incorrect length: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.12312\",\n      coordinate: \"A2\",\n      value: 3\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Expected puzzle to be 81 characters long\");\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with invalid placement coordinate: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      coordinate: \"T2\",\n      value: 3\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Invalid coordinate\");\n      done();\n    });\n  });\n  test(\"Check a puzzle placement with invalid placement value: POST request to /api/check\", done => {\n    chai.request(server).post(\"/api/check\").send({\n      puzzle: \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      coordinate: \"A2\",\n      value: \"X\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Invalid value\");\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "2_functional-tests.js"
      ],
      "names": [
        "chai",
        "require",
        "chaiHttp",
        "assert",
        "server",
        "use",
        "suite",
        "test",
        "done",
        "request",
        "post",
        "send",
        "puzzle",
        "end",
        "err",
        "res",
        "equal",
        "status",
        "body",
        "solution",
        "error",
        "coordinate",
        "value",
        "valid",
        "conflict"
      ],
      "mappings": "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",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/tests/",
      "sourcesContent": [
        "const chai = require(\"chai\");\nconst chaiHttp = require(\"chai-http\");\nconst assert = chai.assert;\nconst server = require(\"../server\");\n\nchai.use(chaiHttp);\n\nsuite(\"Functional Tests\", () => {\n  test(\"Solve a puzzle with valid puzzle string: POST request to /api/solve\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/solve\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(\n          res.body.solution,\n          \"135762984946381257728459613694517832812936745357824196473298561581673429269145378\"\n        );\n        done();\n      });\n  });\n\n  test(\"Solve a puzzle with missing puzzle string: POST reguest to /api/solve\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/solve\")\n      .send({})\n      .end(function (err, res) {\n        assert.equal(res.body.error, \"Required field missing\");\n        assert.equal(res.status, 200);\n        done();\n      });\n  });\n\n  test(\"Solve a puzzle with invalid characters: POST request to /api/solve\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/solve\")\n      .send({\n        puzzle:\n          \"1.5.?2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.error, \"Invalid characters in puzzle\");\n        done();\n      });\n  });\n\n  test(\"Solve a puzzle with incorrect length: POST request to /api/solve\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/solve\")\n      .send({\n        puzzle:\n          \"1.5.?2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....92691423.37.\",\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(\n          res.body.error,\n          \"Expected puzzle to be 81 characters long\"\n        );\n        done();\n      });\n  });\n\n  test(\"Solve a puzzle that cannot be solved: POST request to /api/solve\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/solve\")\n      .send({\n        puzzle:\n          \"9.9..5.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..\",\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.error, \"Puzzle cannot be solved\");\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with all fields: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n        coordinate: \"A2\",\n        value: 3,\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.valid, true);\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with single placement conflict: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n        coordinate: \"A2\",\n        value: 4,\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.valid, false);\n        assert.equal(res.body.conflict[0], \"row\");\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with multiple placement conflict: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n        coordinate: \"A2\",\n        value: 2,\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.valid, false);\n        assert.equal(res.body.conflict[0], \"row\");\n        assert.equal(res.body.conflict[1], \"column\");\n        assert.equal(res.body.conflict[2], \"region\");\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with all placement conflict: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n        coordinate: \"A2\",\n        value: 2,\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.valid, false);\n        assert.equal(res.body.conflict[0], \"row\");\n        assert.equal(res.body.conflict[1], \"column\");\n        assert.equal(res.body.conflict[2], \"region\");\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with missing required fields: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n        coordinate: \"A2\",\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.error, \"Required field(s) missing\");\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with invalid characters: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5.?2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n        coordinate: \"A2\",\n        value: 3,\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.error, \"Invalid characters in puzzle\");\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with incorrect length: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.12312\",\n        coordinate: \"A2\",\n        value: 3,\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(\n          res.body.error,\n          \"Expected puzzle to be 81 characters long\"\n        );\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with invalid placement coordinate: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n        coordinate: \"T2\",\n        value: 3,\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.error, \"Invalid coordinate\");\n        done();\n      });\n  });\n\n  test(\"Check a puzzle placement with invalid placement value: POST request to /api/check\", (done) => {\n    chai\n      .request(server)\n      .post(\"/api/check\")\n      .send({\n        puzzle:\n          \"1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.\",\n        coordinate: \"A2\",\n        value: \"X\",\n      })\n      .end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.error, \"Invalid value\");\n        done();\n      });\n  });\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615923252657
  },
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "require('dotenv').config();\n\nconst express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst expect = require('chai').expect;\n\nconst cors = require('cors');\n\nconst fccTestingRoutes = require('./routes/fcctesting.js');\n\nconst apiRoutes = require('./routes/api.js');\n\nconst runner = require('./test-runner');\n\nconst app = express();\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({\n  origin: '*'\n})); //For FCC testing purposes only\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n})); //Index page (static HTML)\n\napp.route('/').get(function (req, res) {\n  res.sendFile(process.cwd() + '/views/index.html');\n}); //For FCC testing purposes\n\nfccTestingRoutes(app); // User routes\n\napiRoutes(app); //404 Not Found Middleware\n\napp.use(function (req, res, next) {\n  res.status(404).type('text').send('Not Found');\n}); //Start our server and tests!\n\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, function () {\n  console.log(\"Listening on port \" + PORT); // process.env.NODE_ENV='test'\n\n  if (process.env.NODE_ENV === 'test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (error) {\n        console.log('Tests are not valid:');\n        console.error(error);\n      }\n    }, 1500);\n  }\n});\nmodule.exports = app; // for testing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJleHBlY3QiLCJjb3JzIiwiZmNjVGVzdGluZ1JvdXRlcyIsImFwaVJvdXRlcyIsInJ1bm5lciIsImFwcCIsInVzZSIsInN0YXRpYyIsInByb2Nlc3MiLCJjd2QiLCJvcmlnaW4iLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kRmlsZSIsIm5leHQiLCJzdGF0dXMiLCJ0eXBlIiwic2VuZCIsIlBPUlQiLCJlbnYiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiTk9ERV9FTlYiLCJzZXRUaW1lb3V0IiwicnVuIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFPRixPQUFPLENBQUMsU0FBRCxDQUEzQjs7QUFDQSxNQUFNRyxVQUFVLEdBQUlILE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUNBLE1BQU1JLE1BQU0sR0FBUUosT0FBTyxDQUFDLE1BQUQsQ0FBUCxDQUFnQkksTUFBcEM7O0FBQ0EsTUFBTUMsSUFBSSxHQUFVTCxPQUFPLENBQUMsTUFBRCxDQUEzQjs7QUFFQSxNQUFNTSxnQkFBZ0IsR0FBSU4sT0FBTyxDQUFDLHdCQUFELENBQWpDOztBQUNBLE1BQU1PLFNBQVMsR0FBV1AsT0FBTyxDQUFDLGlCQUFELENBQWpDOztBQUNBLE1BQU1RLE1BQU0sR0FBY1IsT0FBTyxDQUFDLGVBQUQsQ0FBakM7O0FBRUEsTUFBTVMsR0FBRyxHQUFHUCxPQUFPLEVBQW5CO0FBRUFPLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJSLE9BQU8sQ0FBQ1MsTUFBUixDQUFlQyxPQUFPLENBQUNDLEdBQVIsS0FBZ0IsU0FBL0IsQ0FBbkI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVFMLElBQUksQ0FBQztBQUFDUyxFQUFBQSxNQUFNLEVBQUU7QUFBVCxDQUFELENBQVosRSxDQUE4Qjs7QUFFOUJMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRUCxVQUFVLENBQUNZLElBQVgsRUFBUjtBQUNBTixHQUFHLENBQUNDLEdBQUosQ0FBUVAsVUFBVSxDQUFDYSxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVIsRSxDQUVBOztBQUNBUixHQUFHLENBQUNTLEtBQUosQ0FBVSxHQUFWLEVBQ0dDLEdBREgsQ0FDTyxVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDdkJBLEVBQUFBLEdBQUcsQ0FBQ0MsUUFBSixDQUFhVixPQUFPLENBQUNDLEdBQVIsS0FBZ0IsbUJBQTdCO0FBQ0QsQ0FISCxFLENBS0E7O0FBQ0FQLGdCQUFnQixDQUFDRyxHQUFELENBQWhCLEMsQ0FFQTs7QUFDQUYsU0FBUyxDQUFDRSxHQUFELENBQVQsQyxDQUVBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFTVSxHQUFULEVBQWNDLEdBQWQsRUFBbUJFLElBQW5CLEVBQXlCO0FBQy9CRixFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQ0dDLElBREgsQ0FDUSxNQURSLEVBRUdDLElBRkgsQ0FFUSxXQUZSO0FBR0QsQ0FKRCxFLENBTUE7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHZixPQUFPLENBQUNnQixHQUFSLENBQVlELElBQVosSUFBb0IsSUFBakM7QUFDQWxCLEdBQUcsQ0FBQ29CLE1BQUosQ0FBV0YsSUFBWCxFQUFpQixZQUFZO0FBQzNCRyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBdUJKLElBQW5DLEVBRDJCLENBRTNCOztBQUNBLE1BQUlmLE9BQU8sQ0FBQ2dCLEdBQVIsQ0FBWUksUUFBWixLQUF1QixNQUEzQixFQUFtQztBQUNqQ0YsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksa0JBQVo7QUFDQUUsSUFBQUEsVUFBVSxDQUFDLFlBQVk7QUFDckIsVUFBSTtBQUNGekIsUUFBQUEsTUFBTSxDQUFDMEIsR0FBUDtBQUNELE9BRkQsQ0FFRSxPQUFPQyxLQUFQLEVBQWM7QUFDZEwsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksc0JBQVo7QUFDQUQsUUFBQUEsT0FBTyxDQUFDSyxLQUFSLENBQWNBLEtBQWQ7QUFDRDtBQUNGLEtBUFMsRUFPUCxJQVBPLENBQVY7QUFRRDtBQUNGLENBZEQ7QUFnQkFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjVCLEdBQWpCLEMsQ0FBc0IiLCJzb3VyY2VSb290IjoiL2hvbWUvZGVsdXhlL0RvY3VtZW50cy9wcm9ncmFtcy9zdWRva3Utc29sdmVyLyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuY29uc3QgZXhwcmVzcyAgICAgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBib2R5UGFyc2VyICA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5jb25zdCBleHBlY3QgICAgICA9IHJlcXVpcmUoJ2NoYWknKS5leHBlY3Q7XG5jb25zdCBjb3JzICAgICAgICA9IHJlcXVpcmUoJ2NvcnMnKTtcblxuY29uc3QgZmNjVGVzdGluZ1JvdXRlcyAgPSByZXF1aXJlKCcuL3JvdXRlcy9mY2N0ZXN0aW5nLmpzJyk7XG5jb25zdCBhcGlSb3V0ZXMgICAgICAgICA9IHJlcXVpcmUoJy4vcm91dGVzL2FwaS5qcycpO1xuY29uc3QgcnVubmVyICAgICAgICAgICAgPSByZXF1aXJlKCcuL3Rlc3QtcnVubmVyJyk7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZSgnL3B1YmxpYycsIGV4cHJlc3Muc3RhdGljKHByb2Nlc3MuY3dkKCkgKyAnL3B1YmxpYycpKTtcbmFwcC51c2UoY29ycyh7b3JpZ2luOiAnKid9KSk7IC8vRm9yIEZDQyB0ZXN0aW5nIHB1cnBvc2VzIG9ubHlcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcblxuLy9JbmRleCBwYWdlIChzdGF0aWMgSFRNTClcbmFwcC5yb3V0ZSgnLycpXG4gIC5nZXQoZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgcmVzLnNlbmRGaWxlKHByb2Nlc3MuY3dkKCkgKyAnL3ZpZXdzL2luZGV4Lmh0bWwnKTtcbiAgfSk7XG5cbi8vRm9yIEZDQyB0ZXN0aW5nIHB1cnBvc2VzXG5mY2NUZXN0aW5nUm91dGVzKGFwcCk7XG5cbi8vIFVzZXIgcm91dGVzXG5hcGlSb3V0ZXMoYXBwKTtcbiAgICBcbi8vNDA0IE5vdCBGb3VuZCBNaWRkbGV3YXJlXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIHJlcy5zdGF0dXMoNDA0KVxuICAgIC50eXBlKCd0ZXh0JylcbiAgICAuc2VuZCgnTm90IEZvdW5kJyk7XG59KTtcblxuLy9TdGFydCBvdXIgc2VydmVyIGFuZCB0ZXN0cyFcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDBcbmFwcC5saXN0ZW4oUE9SVCwgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZyhcIkxpc3RlbmluZyBvbiBwb3J0IFwiICsgUE9SVCk7XG4gIC8vIHByb2Nlc3MuZW52Lk5PREVfRU5WPSd0ZXN0J1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlY9PT0ndGVzdCcpIHtcbiAgICBjb25zb2xlLmxvZygnUnVubmluZyBUZXN0cy4uLicpO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcnVubmVyLnJ1bigpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1Rlc3RzIGFyZSBub3QgdmFsaWQ6Jyk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgfVxuICAgIH0sIDE1MDApO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7IC8vIGZvciB0ZXN0aW5nXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "config",
        "express",
        "bodyParser",
        "expect",
        "cors",
        "fccTestingRoutes",
        "apiRoutes",
        "runner",
        "app",
        "use",
        "static",
        "process",
        "cwd",
        "origin",
        "json",
        "urlencoded",
        "extended",
        "route",
        "get",
        "req",
        "res",
        "sendFile",
        "next",
        "status",
        "type",
        "send",
        "PORT",
        "env",
        "listen",
        "console",
        "log",
        "NODE_ENV",
        "setTimeout",
        "run",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,OAAO,GAAOF,OAAO,CAAC,SAAD,CAA3B;;AACA,MAAMG,UAAU,GAAIH,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMI,MAAM,GAAQJ,OAAO,CAAC,MAAD,CAAP,CAAgBI,MAApC;;AACA,MAAMC,IAAI,GAAUL,OAAO,CAAC,MAAD,CAA3B;;AAEA,MAAMM,gBAAgB,GAAIN,OAAO,CAAC,wBAAD,CAAjC;;AACA,MAAMO,SAAS,GAAWP,OAAO,CAAC,iBAAD,CAAjC;;AACA,MAAMQ,MAAM,GAAcR,OAAO,CAAC,eAAD,CAAjC;;AAEA,MAAMS,GAAG,GAAGP,OAAO,EAAnB;AAEAO,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBR,OAAO,CAACS,MAAR,CAAeC,OAAO,CAACC,GAAR,KAAgB,SAA/B,CAAnB;AACAJ,GAAG,CAACC,GAAJ,CAAQL,IAAI,CAAC;AAACS,EAAAA,MAAM,EAAE;AAAT,CAAD,CAAZ,E,CAA8B;;AAE9BL,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACY,IAAX,EAAR;AACAN,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACa,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAR,GAAG,CAACS,KAAJ,CAAU,GAAV,EACGC,GADH,CACO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACvBA,EAAAA,GAAG,CAACC,QAAJ,CAAaV,OAAO,CAACC,GAAR,KAAgB,mBAA7B;AACD,CAHH,E,CAKA;;AACAP,gBAAgB,CAACG,GAAD,CAAhB,C,CAEA;;AACAF,SAAS,CAACE,GAAD,CAAT,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAASU,GAAT,EAAcC,GAAd,EAAmBE,IAAnB,EAAyB;AAC/BF,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,MADR,EAEGC,IAFH,CAEQ,WAFR;AAGD,CAJD,E,CAMA;;AACA,MAAMC,IAAI,GAAGf,OAAO,CAACgB,GAAR,CAAYD,IAAZ,IAAoB,IAAjC;AACAlB,GAAG,CAACoB,MAAJ,CAAWF,IAAX,EAAiB,YAAY;AAC3BG,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,IAAnC,EAD2B,CAE3B;;AACA,MAAIf,OAAO,CAACgB,GAAR,CAAYI,QAAZ,KAAuB,MAA3B,EAAmC;AACjCF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAE,IAAAA,UAAU,CAAC,YAAY;AACrB,UAAI;AACFzB,QAAAA,MAAM,CAAC0B,GAAP;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,QAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACD;AACF,KAPS,EAOP,IAPO,CAAV;AAQD;AACF,CAdD;AAgBAC,MAAM,CAACC,OAAP,GAAiB5B,GAAjB,C,CAAsB",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
      "sourcesContent": [
        "require('dotenv').config();\nconst express     = require('express');\nconst bodyParser  = require('body-parser');\nconst expect      = require('chai').expect;\nconst cors        = require('cors');\n\nconst fccTestingRoutes  = require('./routes/fcctesting.js');\nconst apiRoutes         = require('./routes/api.js');\nconst runner            = require('./test-runner');\n\nconst app = express();\n\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({origin: '*'})); //For FCC testing purposes only\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n//Index page (static HTML)\napp.route('/')\n  .get(function (req, res) {\n    res.sendFile(process.cwd() + '/views/index.html');\n  });\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n\n// User routes\napiRoutes(app);\n    \n//404 Not Found Middleware\napp.use(function(req, res, next) {\n  res.status(404)\n    .type('text')\n    .send('Not Found');\n});\n\n//Start our server and tests!\nconst PORT = process.env.PORT || 3000\napp.listen(PORT, function () {\n  console.log(\"Listening on port \" + PORT);\n  // process.env.NODE_ENV='test'\n  if (process.env.NODE_ENV==='test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (error) {\n        console.log('Tests are not valid:');\n        console.error(error);\n      }\n    }, 1500);\n  }\n});\n\nmodule.exports = app; // for testing\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615922611173
  },
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/routes/fcctesting.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/routes/fcctesting.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/routes/fcctesting.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/routes/fcctesting.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/routes/",
        "sourceFileName": "fcctesting.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n'use strict';\n\nconst cors = require('cors');\n\nconst fs = require('fs');\n\nconst runner = require('../test-runner');\n\nmodule.exports = function (app) {\n  app.route('/_api/server.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/server.js', function (err, data) {\n      if (err) return next(err);\n      res.send(data.toString());\n    });\n  });\n  app.route('/_api/routes/api.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/routes/api.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.route('/_api/controllers/convertHandler.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/controllers/convertHandler.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  let error;\n  app.get('/_api/get-tests', cors(), function (req, res, next) {\n    console.log(error);\n    if (!error && process.env.NODE_ENV === 'test') return next();\n    res.json({\n      status: 'unavailable'\n    });\n  }, function (req, res, next) {\n    if (!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  }, function (req, res) {\n    runner.on('done', function (report) {\n      process.nextTick(() => res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function (req, res) {\n    let hs = Object.keys(res._headers).filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {\n      hObj[h] = res._headers[h];\n    });\n    delete res._headers['strict-transport-security'];\n    res.json({\n      headers: hObj\n    });\n  });\n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n\n  switch (type) {\n    case 'unit':\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n\n    default:\n      out = tests;\n  }\n\n  if (n !== undefined) {\n    return out[n] || out;\n  }\n\n  return out;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "fcctesting.js"
      ],
      "names": [
        "cors",
        "require",
        "fs",
        "runner",
        "module",
        "exports",
        "app",
        "route",
        "get",
        "req",
        "res",
        "next",
        "console",
        "log",
        "readFile",
        "__dirname",
        "err",
        "data",
        "send",
        "toString",
        "type",
        "error",
        "process",
        "env",
        "NODE_ENV",
        "json",
        "status",
        "report",
        "testFilter",
        "query",
        "n",
        "on",
        "nextTick",
        "hs",
        "Object",
        "keys",
        "_headers",
        "filter",
        "h",
        "match",
        "hObj",
        "forEach",
        "headers",
        "tests",
        "out",
        "t",
        "context",
        "title",
        "undefined"
      ],
      "mappings": "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",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/routes/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nconst cors = require('cors');\nconst fs = require('fs');\nconst runner = require('../test-runner');\n\nmodule.exports = function (app) {\n\n  app.route('/_api/server.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/server.js', function(err, data) {\n        if(err) return next(err);\n        res.send(data.toString());\n      });\n    });\n  app.route('/_api/routes/api.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/routes/api.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n  app.route('/_api/controllers/convertHandler.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/controllers/convertHandler.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n    \n  let error;\n  app.get('/_api/get-tests', cors(), function(req, res, next){\n    console.log(error);\n    if(!error && process.env.NODE_ENV === 'test') return next();\n    res.json({status: 'unavailable'});\n  },\n  function(req, res, next){\n    if(!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  },\n  function(req, res){\n    runner.on('done', function(report){\n      process.nextTick(() =>  res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function(req, res) {\n    let hs = Object.keys(res._headers)\n      .filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {hObj[h] = res._headers[h]});\n    delete res._headers['strict-transport-security'];\n    res.json({headers: hObj});\n  });\n  \n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n  switch (type) {\n    case 'unit' :\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n    default:\n      out = tests;\n  }\n  if(n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1615922611173
  },
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/test-runner.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/test-runner.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/test-runner.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/test-runner.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
        "sourceFileName": "test-runner.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\nconst analyser = require('./assertion-analyser');\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n      fs = require('fs'),\n      path = require('path');\n\nrequire(\"@babel/register\");\n\nconst mocha = new Mocha({\n  timeout: 5000\n});\nconst testDir = './tests'; // Add each .js file to the mocha instance\n\nfs.readdirSync(testDir).filter(function (file) {\n  // Only keep the .js files\n  return file.substr(-3) === '.js';\n}).forEach(function (file) {\n  mocha.addFile(path.join(testDir, file));\n});\nlet emitter = new EventEmitter();\n\nemitter.run = function () {\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> '; // Run the tests.\n\n  try {\n    let runner = mocha.ui('tdd').run().on('test end', function (test) {\n      // remove comments\n      let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, ''); // collapse spaces\n\n      body = body.replace(/\\s+/g, ' ');\n      let obj = {\n        title: test.title,\n        context: context.slice(0, -separator.length),\n        state: test.state,\n        // body: body,\n        assertions: analyser(body)\n      };\n      tests.push(obj);\n    }).on('end', function () {\n      emitter.report = tests;\n      emitter.emit('done', tests);\n    }).on('suite', function (s) {\n      context += s.title + separator;\n    }).on('suite end', function (s) {\n      context = context.slice(0, -(s.title.length + separator.length));\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n\nmodule.exports = emitter;\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QtcnVubmVyLmpzIl0sIm5hbWVzIjpbImFuYWx5c2VyIiwicmVxdWlyZSIsIkV2ZW50RW1pdHRlciIsIk1vY2hhIiwiZnMiLCJwYXRoIiwibW9jaGEiLCJ0aW1lb3V0IiwidGVzdERpciIsInJlYWRkaXJTeW5jIiwiZmlsdGVyIiwiZmlsZSIsInN1YnN0ciIsImZvckVhY2giLCJhZGRGaWxlIiwiam9pbiIsImVtaXR0ZXIiLCJydW4iLCJ0ZXN0cyIsImNvbnRleHQiLCJzZXBhcmF0b3IiLCJydW5uZXIiLCJ1aSIsIm9uIiwidGVzdCIsImJvZHkiLCJyZXBsYWNlIiwib2JqIiwidGl0bGUiLCJzbGljZSIsImxlbmd0aCIsInN0YXRlIiwiYXNzZXJ0aW9ucyIsInB1c2giLCJyZXBvcnQiLCJlbWl0IiwicyIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxZQUF2Qzs7QUFFQSxNQUFNQyxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFELENBQXJCO0FBQUEsTUFDSUcsRUFBRSxHQUFHSCxPQUFPLENBQUMsSUFBRCxDQURoQjtBQUFBLE1BRUlJLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FGbEI7O0FBR0lBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQOztBQUVKLE1BQU1LLEtBQUssR0FBRyxJQUFJSCxLQUFKLENBQVU7QUFBRUksRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBVixDQUFkO0FBQ0EsTUFBTUMsT0FBTyxHQUFHLFNBQWhCLEMsQ0FHQTs7QUFDQUosRUFBRSxDQUFDSyxXQUFILENBQWVELE9BQWYsRUFBd0JFLE1BQXhCLENBQStCLFVBQVNDLElBQVQsRUFBYztBQUN6QztBQUNBLFNBQU9BLElBQUksQ0FBQ0MsTUFBTCxDQUFZLENBQUMsQ0FBYixNQUFvQixLQUEzQjtBQUVILENBSkQsRUFJR0MsT0FKSCxDQUlXLFVBQVNGLElBQVQsRUFBYztBQUNyQkwsRUFBQUEsS0FBSyxDQUFDUSxPQUFOLENBQ0lULElBQUksQ0FBQ1UsSUFBTCxDQUFVUCxPQUFWLEVBQW1CRyxJQUFuQixDQURKO0FBR0gsQ0FSRDtBQVVBLElBQUlLLE9BQU8sR0FBRyxJQUFJZCxZQUFKLEVBQWQ7O0FBQ0FjLE9BQU8sQ0FBQ0MsR0FBUixHQUFjLFlBQVc7QUFFdkIsTUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQSxNQUFJQyxPQUFPLEdBQUcsRUFBZDtBQUNBLE1BQUlDLFNBQVMsR0FBRyxNQUFoQixDQUp1QixDQUt2Qjs7QUFDQSxNQUFJO0FBQ0osUUFBSUMsTUFBTSxHQUFHZixLQUFLLENBQUNnQixFQUFOLENBQVMsS0FBVCxFQUFnQkwsR0FBaEIsR0FDVk0sRUFEVSxDQUNQLFVBRE8sRUFDSyxVQUFTQyxJQUFULEVBQWU7QUFDM0I7QUFDQSxVQUFJQyxJQUFJLEdBQUdELElBQUksQ0FBQ0MsSUFBTCxDQUFVQyxPQUFWLENBQWtCLHNCQUFsQixFQUEwQyxFQUExQyxDQUFYLENBRjJCLENBRzNCOztBQUNBRCxNQUFBQSxJQUFJLEdBQUdBLElBQUksQ0FBQ0MsT0FBTCxDQUFhLE1BQWIsRUFBb0IsR0FBcEIsQ0FBUDtBQUNBLFVBQUlDLEdBQUcsR0FBRztBQUNSQyxRQUFBQSxLQUFLLEVBQUVKLElBQUksQ0FBQ0ksS0FESjtBQUVSVCxRQUFBQSxPQUFPLEVBQUVBLE9BQU8sQ0FBQ1UsS0FBUixDQUFjLENBQWQsRUFBaUIsQ0FBQ1QsU0FBUyxDQUFDVSxNQUE1QixDQUZEO0FBR1JDLFFBQUFBLEtBQUssRUFBRVAsSUFBSSxDQUFDTyxLQUhKO0FBSVI7QUFDQUMsUUFBQUEsVUFBVSxFQUFFaEMsUUFBUSxDQUFDeUIsSUFBRDtBQUxaLE9BQVY7QUFPQVAsTUFBQUEsS0FBSyxDQUFDZSxJQUFOLENBQVdOLEdBQVg7QUFDSCxLQWRVLEVBZVZKLEVBZlUsQ0FlUCxLQWZPLEVBZUEsWUFBVztBQUNsQlAsTUFBQUEsT0FBTyxDQUFDa0IsTUFBUixHQUFpQmhCLEtBQWpCO0FBQ0FGLE1BQUFBLE9BQU8sQ0FBQ21CLElBQVIsQ0FBYSxNQUFiLEVBQXFCakIsS0FBckI7QUFDSCxLQWxCVSxFQW1CVkssRUFuQlUsQ0FtQlAsT0FuQk8sRUFtQkUsVUFBU2EsQ0FBVCxFQUFZO0FBQ3ZCakIsTUFBQUEsT0FBTyxJQUFLaUIsQ0FBQyxDQUFDUixLQUFGLEdBQVVSLFNBQXRCO0FBRUQsS0F0QlUsRUF1QlZHLEVBdkJVLENBdUJQLFdBdkJPLEVBdUJNLFVBQVNhLENBQVQsRUFBWTtBQUMzQmpCLE1BQUFBLE9BQU8sR0FBR0EsT0FBTyxDQUFDVSxLQUFSLENBQWMsQ0FBZCxFQUFpQixFQUFFTyxDQUFDLENBQUNSLEtBQUYsQ0FBUUUsTUFBUixHQUFpQlYsU0FBUyxDQUFDVSxNQUE3QixDQUFqQixDQUFWO0FBQ0QsS0F6QlUsQ0FBYjtBQTBCQyxHQTNCRCxDQTJCRSxPQUFNTyxDQUFOLEVBQVM7QUFDVCxVQUFNQSxDQUFOO0FBQ0Q7QUFDRixDQXBDRDs7QUFzQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnZCLE9BQWpCO0FBRUEiLCJzb3VyY2VSb290IjoiL2hvbWUvZGVsdXhlL0RvY3VtZW50cy9wcm9ncmFtcy9zdWRva3Utc29sdmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qICAgICAgIERPIE5PVCBFRElUIFRISVMgRklMRVxuKiAgICAgICBGb3IgRkNDIHRlc3RpbmcgcHVycG9zZXMhXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qL1xuXG5jb25zdCBhbmFseXNlciA9IHJlcXVpcmUoJy4vYXNzZXJ0aW9uLWFuYWx5c2VyJyk7XG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG5cbmNvbnN0IE1vY2hhID0gcmVxdWlyZSgnbW9jaGEnKSxcbiAgICBmcyA9IHJlcXVpcmUoJ2ZzJyksXG4gICAgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbiAgICByZXF1aXJlKFwiQGJhYmVsL3JlZ2lzdGVyXCIpO1xuXG5jb25zdCBtb2NoYSA9IG5ldyBNb2NoYSh7IHRpbWVvdXQ6IDUwMDAgfSk7XG5jb25zdCB0ZXN0RGlyID0gJy4vdGVzdHMnXG5cblxuLy8gQWRkIGVhY2ggLmpzIGZpbGUgdG8gdGhlIG1vY2hhIGluc3RhbmNlXG5mcy5yZWFkZGlyU3luYyh0ZXN0RGlyKS5maWx0ZXIoZnVuY3Rpb24oZmlsZSl7XG4gICAgLy8gT25seSBrZWVwIHRoZSAuanMgZmlsZXNcbiAgICByZXR1cm4gZmlsZS5zdWJzdHIoLTMpID09PSAnLmpzJztcblxufSkuZm9yRWFjaChmdW5jdGlvbihmaWxlKXtcbiAgICBtb2NoYS5hZGRGaWxlKFxuICAgICAgICBwYXRoLmpvaW4odGVzdERpciwgZmlsZSlcbiAgICApO1xufSk7XG5cbmxldCBlbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuZW1pdHRlci5ydW4gPSBmdW5jdGlvbigpIHtcblxuICBsZXQgdGVzdHMgPSBbXTtcbiAgbGV0IGNvbnRleHQgPSBcIlwiO1xuICBsZXQgc2VwYXJhdG9yID0gJyAtPiAnO1xuICAvLyBSdW4gdGhlIHRlc3RzLlxuICB0cnkge1xuICBsZXQgcnVubmVyID0gbW9jaGEudWkoJ3RkZCcpLnJ1bigpXG4gICAgLm9uKCd0ZXN0IGVuZCcsIGZ1bmN0aW9uKHRlc3QpIHtcbiAgICAgICAgLy8gcmVtb3ZlIGNvbW1lbnRzXG4gICAgICAgIGxldCBib2R5ID0gdGVzdC5ib2R5LnJlcGxhY2UoL1xcL1xcLy4qXFxufFxcL1xcKi4qXFwqXFwvL2csICcnKTtcbiAgICAgICAgLy8gY29sbGFwc2Ugc3BhY2VzXG4gICAgICAgIGJvZHkgPSBib2R5LnJlcGxhY2UoL1xccysvZywnICcpO1xuICAgICAgICBsZXQgb2JqID0ge1xuICAgICAgICAgIHRpdGxlOiB0ZXN0LnRpdGxlLFxuICAgICAgICAgIGNvbnRleHQ6IGNvbnRleHQuc2xpY2UoMCwgLXNlcGFyYXRvci5sZW5ndGgpLFxuICAgICAgICAgIHN0YXRlOiB0ZXN0LnN0YXRlLFxuICAgICAgICAgIC8vIGJvZHk6IGJvZHksXG4gICAgICAgICAgYXNzZXJ0aW9uczogYW5hbHlzZXIoYm9keSlcbiAgICAgICAgfTtcbiAgICAgICAgdGVzdHMucHVzaChvYmopO1xuICAgIH0pXG4gICAgLm9uKCdlbmQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgZW1pdHRlci5yZXBvcnQgPSB0ZXN0cztcbiAgICAgICAgZW1pdHRlci5lbWl0KCdkb25lJywgdGVzdHMpXG4gICAgfSlcbiAgICAub24oJ3N1aXRlJywgZnVuY3Rpb24ocykge1xuICAgICAgY29udGV4dCArPSAocy50aXRsZSArIHNlcGFyYXRvcik7XG5cbiAgICB9KVxuICAgIC5vbignc3VpdGUgZW5kJywgZnVuY3Rpb24ocykge1xuICAgICAgY29udGV4dCA9IGNvbnRleHQuc2xpY2UoMCwgLShzLnRpdGxlLmxlbmd0aCArIHNlcGFyYXRvci5sZW5ndGgpKVxuICAgIH0pXG4gIH0gY2F0Y2goZSkge1xuICAgIHRocm93KGUpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtaXR0ZXI7XG5cbi8qXG4gKiBNb2NoYS5ydW5uZXIgRXZlbnRzOlxuICogY2FuIGJlIHVzZWQgdG8gYnVpbGQgYSBiZXR0ZXIgY3VzdG9tIHJlcG9ydFxuICpcbiAqICAgLSBgc3RhcnRgICBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBlbmRgICBleGVjdXRpb24gY29tcGxldGVcbiAqICAgLSBgc3VpdGVgICAoc3VpdGUpIHRlc3Qgc3VpdGUgZXhlY3V0aW9uIHN0YXJ0ZWRcbiAqICAgLSBgc3VpdGUgZW5kYCAgKHN1aXRlKSBhbGwgdGVzdHMgKGFuZCBzdWItc3VpdGVzKSBoYXZlIGZpbmlzaGVkXG4gKiAgIC0gYHRlc3RgICAodGVzdCkgdGVzdCBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGB0ZXN0IGVuZGAgICh0ZXN0KSB0ZXN0IGNvbXBsZXRlZFxuICogICAtIGBob29rYCAgKGhvb2spIGhvb2sgZXhlY3V0aW9uIHN0YXJ0ZWRcbiAqICAgLSBgaG9vayBlbmRgICAoaG9vaykgaG9vayBjb21wbGV0ZVxuICogICAtIGBwYXNzYCAgKHRlc3QpIHRlc3QgcGFzc2VkXG4gKiAgIC0gYGZhaWxgICAodGVzdCwgZXJyKSB0ZXN0IGZhaWxlZFxuICogICAtIGBwZW5kaW5nYCAgKHRlc3QpIHRlc3QgcGVuZGluZ1xuICovIl19",
    "map": {
      "version": 3,
      "sources": [
        "test-runner.js"
      ],
      "names": [
        "analyser",
        "require",
        "EventEmitter",
        "Mocha",
        "fs",
        "path",
        "mocha",
        "timeout",
        "testDir",
        "readdirSync",
        "filter",
        "file",
        "substr",
        "forEach",
        "addFile",
        "join",
        "emitter",
        "run",
        "tests",
        "context",
        "separator",
        "runner",
        "ui",
        "on",
        "test",
        "body",
        "replace",
        "obj",
        "title",
        "slice",
        "length",
        "state",
        "assertions",
        "push",
        "report",
        "emit",
        "s",
        "e",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAvC;;AAEA,MAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;AAAA,MACIG,EAAE,GAAGH,OAAO,CAAC,IAAD,CADhB;AAAA,MAEII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAFlB;;AAGIA,OAAO,CAAC,iBAAD,CAAP;;AAEJ,MAAMK,KAAK,GAAG,IAAIH,KAAJ,CAAU;AAAEI,EAAAA,OAAO,EAAE;AAAX,CAAV,CAAd;AACA,MAAMC,OAAO,GAAG,SAAhB,C,CAGA;;AACAJ,EAAE,CAACK,WAAH,CAAeD,OAAf,EAAwBE,MAAxB,CAA+B,UAASC,IAAT,EAAc;AACzC;AACA,SAAOA,IAAI,CAACC,MAAL,CAAY,CAAC,CAAb,MAAoB,KAA3B;AAEH,CAJD,EAIGC,OAJH,CAIW,UAASF,IAAT,EAAc;AACrBL,EAAAA,KAAK,CAACQ,OAAN,CACIT,IAAI,CAACU,IAAL,CAAUP,OAAV,EAAmBG,IAAnB,CADJ;AAGH,CARD;AAUA,IAAIK,OAAO,GAAG,IAAId,YAAJ,EAAd;;AACAc,OAAO,CAACC,GAAR,GAAc,YAAW;AAEvB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,SAAS,GAAG,MAAhB,CAJuB,CAKvB;;AACA,MAAI;AACJ,QAAIC,MAAM,GAAGf,KAAK,CAACgB,EAAN,CAAS,KAAT,EAAgBL,GAAhB,GACVM,EADU,CACP,UADO,EACK,UAASC,IAAT,EAAe;AAC3B;AACA,UAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkB,sBAAlB,EAA0C,EAA1C,CAAX,CAF2B,CAG3B;;AACAD,MAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAoB,GAApB,CAAP;AACA,UAAIC,GAAG,GAAG;AACRC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KADJ;AAERT,QAAAA,OAAO,EAAEA,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiB,CAACT,SAAS,CAACU,MAA5B,CAFD;AAGRC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHJ;AAIR;AACAC,QAAAA,UAAU,EAAEhC,QAAQ,CAACyB,IAAD;AALZ,OAAV;AAOAP,MAAAA,KAAK,CAACe,IAAN,CAAWN,GAAX;AACH,KAdU,EAeVJ,EAfU,CAeP,KAfO,EAeA,YAAW;AAClBP,MAAAA,OAAO,CAACkB,MAAR,GAAiBhB,KAAjB;AACAF,MAAAA,OAAO,CAACmB,IAAR,CAAa,MAAb,EAAqBjB,KAArB;AACH,KAlBU,EAmBVK,EAnBU,CAmBP,OAnBO,EAmBE,UAASa,CAAT,EAAY;AACvBjB,MAAAA,OAAO,IAAKiB,CAAC,CAACR,KAAF,GAAUR,SAAtB;AAED,KAtBU,EAuBVG,EAvBU,CAuBP,WAvBO,EAuBM,UAASa,CAAT,EAAY;AAC3BjB,MAAAA,OAAO,GAAGA,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiB,EAAEO,CAAC,CAACR,KAAF,CAAQE,MAAR,GAAiBV,SAAS,CAACU,MAA7B,CAAjB,CAAV;AACD,KAzBU,CAAb;AA0BC,GA3BD,CA2BE,OAAMO,CAAN,EAAS;AACT,UAAMA,CAAN;AACD;AACF,CApCD;;AAsCAC,MAAM,CAACC,OAAP,GAAiBvB,OAAjB;AAEA",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nconst analyser = require('./assertion-analyser');\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n    require(\"@babel/register\");\n\nconst mocha = new Mocha({ timeout: 5000 });\nconst testDir = './tests'\n\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function(file){\n    // Only keep the .js files\n    return file.substr(-3) === '.js';\n\n}).forEach(function(file){\n    mocha.addFile(\n        path.join(testDir, file)\n    );\n});\n\nlet emitter = new EventEmitter();\nemitter.run = function() {\n\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> ';\n  // Run the tests.\n  try {\n  let runner = mocha.ui('tdd').run()\n    .on('test end', function(test) {\n        // remove comments\n        let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n        // collapse spaces\n        body = body.replace(/\\s+/g,' ');\n        let obj = {\n          title: test.title,\n          context: context.slice(0, -separator.length),\n          state: test.state,\n          // body: body,\n          assertions: analyser(body)\n        };\n        tests.push(obj);\n    })\n    .on('end', function() {\n        emitter.report = tests;\n        emitter.emit('done', tests)\n    })\n    .on('suite', function(s) {\n      context += (s.title + separator);\n\n    })\n    .on('suite end', function(s) {\n      context = context.slice(0, -(s.title.length + separator.length))\n    })\n  } catch(e) {\n    throw(e);\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */"
      ]
    },
    "sourceType": "module",
    "mtime": 1615922611173
  },
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/assertion-analyser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/assertion-analyser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/assertion-analyser.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/assertion-analyser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
        "sourceFileName": "assertion-analyser.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n\n  for (i = init || 0; i < str.length; i++) {\n    type = openSym.indexOf(str[i]);\n    if (type !== -1) break;\n  }\n\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n\n  for (k = i + 1; k < str.length; k++) {\n    if (open === '\"' || open === \"'\") {\n      if (str[k] === close) count--;\n      if (str[k] === '\\\\') k++;\n    } else {\n      if (str[k] === open) count++;\n      if (str[k] === close) count--;\n    }\n\n    if (count === 0) break;\n  }\n\n  if (count !== 0) return null;\n  let obj = str.slice(i, k + 1);\n  return {\n    start: i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n\n  while (obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end + 1);\n  }\n\n  return {\n    str: str,\n    dictionary: data\n  };\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function (a) {\n    let m = a.match(/__#(\\d+)/);\n\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n\n    return a.trim();\n  });\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  if (!body) return \"invalid assertion\"; // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/);\n\n  if (cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n\n  let s = replacer(body); // split on 'assertion'\n\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1); // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function (a, i) {\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if (methods.some(function (m) {\n    return !m;\n  })) return \"invalid assertion\"; // remove parens from the assertions bodies\n\n  let bodies = assertionBodies.map(function (b) {\n    return s.dictionary[b].slice(1, -1).trim();\n  });\n  assertions = methods.map(function (m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n\n    };\n  });\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "assertion-analyser.js"
      ],
      "names": [
        "objParser",
        "str",
        "init",
        "openSym",
        "closeSym",
        "type",
        "i",
        "length",
        "indexOf",
        "open",
        "close",
        "count",
        "k",
        "obj",
        "slice",
        "start",
        "end",
        "replacer",
        "cnt",
        "data",
        "substring",
        "dictionary",
        "splitter",
        "strObj",
        "args",
        "split",
        "map",
        "a",
        "m",
        "match",
        "replace",
        "trim",
        "assertionAnalyser",
        "body",
        "cleanedBody",
        "Array",
        "isArray",
        "s",
        "splittedAssertions",
        "assertions",
        "assertionBodies",
        "methods",
        "push",
        "parseInt",
        "pre",
        "some",
        "bodies",
        "b",
        "method",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n  for(i = (init || 0); i < str.length; i++ ) {\n    type = openSym.indexOf(str[i]);\n    if( type !== -1)  break;\n  }\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n  for(k = i+1; k < str.length; k++) {\n    if(open === '\"' || open === \"'\") {\n      if(str[k] === close) count--;\n      if(str[k] === '\\\\') k++;\n    } else {\n      if(str[k] === open) count++;\n      if(str[k] === close) count--;\n    }\n    if(count === 0) break;\n  }\n  if(count !== 0) return null;\n  let obj = str.slice(i, k+1);\n  return {\n    start : i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n  while(obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end+1)\n  }\n  return {\n    str : str,\n    dictionary : data\n  }\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function(a){\n    let m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  })\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  \n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  \n  if(!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)\n  if(cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n  let s = replacer(body);\n  // split on 'assertion'\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function(a, i){\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if(methods.some(function(m){ return !m })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  let bodies = assertionBodies.map(function(b){\n    return s.dictionary[b].slice(1,-1).trim();\n  });\n  assertions = methods.map(function(m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    }\n  })\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615922611167
  },
  "{\"sourceRoot\":\"/home/deluxe/Documents/programs/sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"filename\":\"/home/deluxe/Documents/programs/sudoku-solver/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/deluxe/Documents/programs/sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deluxe/Documents/programs/sudoku-solver",
      "filename": "/home/deluxe/Documents/programs/sudoku-solver/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/deluxe/Documents/programs/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deluxe/Documents/programs/sudoku-solver/routes/api.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/deluxe/Documents/programs/sudoku-solver/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst puzzlesAndSolutions = require(\"../controllers/puzzle-strings\");\n\nconst Solver = require(\"../controllers/sudoku-solver.js\");\n\nmodule.exports = function (app) {\n  app.route(\"/api/check\").post((req, res) => {\n    const Rows = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n    let {\n      puzzle,\n      coordinate,\n      value\n    } = req.body;\n    let conflictArray = [];\n\n    if (!puzzle || !coordinate || !value) {\n      return res.send({\n        error: \"Required field(s) missing\"\n      });\n    }\n\n    debugger; //coordinate is a letter A-I followed by number 1-9\n\n    let row = coordinate[0];\n    let column = Number(coordinate[1]);\n    value = Number(value);\n    let argumentValidator = Solver.argumentValidator(row, column, value, Rows);\n\n    if (argumentValidator !== true) {\n      return res.send({\n        error: argumentValidator\n      });\n    }\n\n    if (Solver.isValidPuzzleString(puzzle) !== true) {\n      return res.send({\n        error: Solver.isValidPuzzleString(puzzle)\n      });\n    }\n\n    let grid = Solver.convertToGrid(puzzle);\n    let solver = new Solver(grid);\n    let isRightValueViaCoordinate = solver.isRightValueViaCoordinate(row, column, value);\n\n    if (isRightValueViaCoordinate === true) {\n      return res.send({\n        valid: true\n      });\n    }\n\n    let reason = solver.isValidResult;\n\n    if (reason[\"conflictRow\"]) {\n      conflictArray.push(\"row\");\n    }\n\n    if (reason[\"conflictCol\"]) {\n      conflictArray.push(\"column\");\n    }\n\n    if (reason[\"conflictGrid\"]) {\n      conflictArray.push(\"region\");\n    }\n\n    return res.send({\n      valid: false,\n      conflict: conflictArray\n    });\n  });\n  app.route(\"/api/solve\").post((req, res) => {\n    if (!req.body.puzzle) {\n      return res.send({\n        error: \"Required field missing\"\n      });\n    }\n\n    let puzzleString = req.body.puzzle;\n    const validateResult = Solver.isValidPuzzleString(puzzleString);\n\n    if (validateResult === true) {\n      let grid = Solver.convertToGrid(puzzleString);\n      let solver = new Solver(grid);\n\n      if (solver.solve(puzzleString)) {\n        let solution = solver.getSolvedPuzzleString();\n        return res.send({\n          solution: solution\n        });\n      } else {\n        return res.send({\n          error: \"Puzzle cannot be solved\"\n        });\n      }\n    }\n\n    res.send({\n      error: validateResult\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJwdXp6bGVzQW5kU29sdXRpb25zIiwicmVxdWlyZSIsIlNvbHZlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJyb3V0ZSIsInBvc3QiLCJyZXEiLCJyZXMiLCJSb3dzIiwicHV6emxlIiwiY29vcmRpbmF0ZSIsInZhbHVlIiwiYm9keSIsImNvbmZsaWN0QXJyYXkiLCJzZW5kIiwiZXJyb3IiLCJyb3ciLCJjb2x1bW4iLCJOdW1iZXIiLCJhcmd1bWVudFZhbGlkYXRvciIsImlzVmFsaWRQdXp6bGVTdHJpbmciLCJncmlkIiwiY29udmVydFRvR3JpZCIsInNvbHZlciIsImlzUmlnaHRWYWx1ZVZpYUNvb3JkaW5hdGUiLCJ2YWxpZCIsInJlYXNvbiIsImlzVmFsaWRSZXN1bHQiLCJwdXNoIiwiY29uZmxpY3QiLCJwdXp6bGVTdHJpbmciLCJ2YWxpZGF0ZVJlc3VsdCIsInNvbHZlIiwic29sdXRpb24iLCJnZXRTb2x2ZWRQdXp6bGVTdHJpbmciXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLG1CQUFtQixHQUFHQyxPQUFPLENBQUMsK0JBQUQsQ0FBbkM7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsaUNBQUQsQ0FBdEI7O0FBQ0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWU7QUFDOUJBLEVBQUFBLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLFlBQVYsRUFBd0JDLElBQXhCLENBQTZCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3pDLFVBQU1DLElBQUksR0FBRyxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQixFQUFxQixHQUFyQixFQUEwQixHQUExQixFQUErQixHQUEvQixFQUFvQyxHQUFwQyxFQUF5QyxHQUF6QyxDQUFiO0FBQ0EsUUFBSTtBQUFFQyxNQUFBQSxNQUFGO0FBQVVDLE1BQUFBLFVBQVY7QUFBc0JDLE1BQUFBO0FBQXRCLFFBQWdD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M0IsVUFBSVYsSUFBSSxHQUFHckIsTUFBTSxDQUFDc0IsYUFBUCxDQUFxQlEsWUFBckIsQ0FBWDtBQUNBLFVBQUlQLE1BQU0sR0FBRyxJQUFJdkIsTUFBSixDQUFXcUIsSUFBWCxDQUFiOztBQUVBLFVBQUlFLE1BQU0sQ0FBQ1MsS0FBUCxDQUFhRixZQUFiLENBQUosRUFBZ0M7QUFDOUIsWUFBSUcsUUFBUSxHQUFHVixNQUFNLENBQUNXLHFCQUFQLEVBQWY7QUFDQSxlQUFPM0IsR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFDZG1CLFVBQUFBLFFBQVEsRUFBRUE7QUFESSxTQUFULENBQVA7QUFHRCxPQUxELE1BS087QUFDTCxlQUFPMUIsR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFDZEMsVUFBQUEsS0FBSyxFQUFFO0FBRE8sU0FBVCxDQUFQO0FBR0Q7QUFDRjs7QUFFRFIsSUFBQUEsR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFDUEMsTUFBQUEsS0FBSyxFQUFFZ0I7QUFEQSxLQUFUO0FBR0QsR0E1QkQ7QUE2QkQsQ0EvRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvZGVsdXhlL0RvY3VtZW50cy9wcm9ncmFtcy9zdWRva3Utc29sdmVyL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgcHV6emxlc0FuZFNvbHV0aW9ucyA9IHJlcXVpcmUoXCIuLi9jb250cm9sbGVycy9wdXp6bGUtc3RyaW5nc1wiKTtcbmNvbnN0IFNvbHZlciA9IHJlcXVpcmUoXCIuLi9jb250cm9sbGVycy9zdWRva3Utc29sdmVyLmpzXCIpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXBwKSB7XG4gIGFwcC5yb3V0ZShcIi9hcGkvY2hlY2tcIikucG9zdCgocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBSb3dzID0gW1wiQVwiLCBcIkJcIiwgXCJDXCIsIFwiRFwiLCBcIkVcIiwgXCJGXCIsIFwiR1wiLCBcIkhcIiwgXCJJXCJdO1xuICAgIGxldCB7IHB1enpsZSwgY29vcmRpbmF0ZSwgdmFsdWUgfSA9IHJlcS5ib2R5O1xuICAgIGxldCBjb25mbGljdEFycmF5ID0gW107XG5cbiAgICBpZiAoIXB1enpsZSB8fCAhY29vcmRpbmF0ZSB8fCAhdmFsdWUpIHtcbiAgICAgIHJldHVybiByZXMuc2VuZCh7XG4gICAgICAgIGVycm9yOiBcIlJlcXVpcmVkIGZpZWxkKHMpIG1pc3NpbmdcIixcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGRlYnVnZ2VyO1xuICAgIC8vY29vcmRpbmF0ZSBpcyBhIGxldHRlciBBLUkgZm9sbG93ZWQgYnkgbnVtYmVyIDEtOVxuICAgIGxldCByb3cgPSBjb29yZGluYXRlWzBdO1xuICAgIGxldCBjb2x1bW4gPSBOdW1iZXIoY29vcmRpbmF0ZVsxXSk7XG4gICAgdmFsdWUgPSBOdW1iZXIodmFsdWUpO1xuXG4gICAgbGV0IGFyZ3VtZW50VmFsaWRhdG9yID0gU29sdmVyLmFyZ3VtZW50VmFsaWRhdG9yKHJvdywgY29sdW1uLCB2YWx1ZSwgUm93cyk7XG4gICAgaWYgKGFyZ3VtZW50VmFsaWRhdG9yICE9PSB0cnVlKSB7XG4gICAgICByZXR1cm4gcmVzLnNlbmQoe1xuICAgICAgICBlcnJvcjogYXJndW1lbnRWYWxpZGF0b3IsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoU29sdmVyLmlzVmFsaWRQdXp6bGVTdHJpbmcocHV6emxlKSAhPT0gdHJ1ZSkge1xuICAgICAgcmV0dXJuIHJlcy5zZW5kKHtcbiAgICAgICAgZXJyb3I6IFNvbHZlci5pc1ZhbGlkUHV6emxlU3RyaW5nKHB1enpsZSksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBsZXQgZ3JpZCA9IFNvbHZlci5jb252ZXJ0VG9HcmlkKHB1enpsZSk7XG4gICAgbGV0IHNvbHZlciA9IG5ldyBTb2x2ZXIoZ3JpZCk7XG5cbiAgICBsZXQgaXNSaWdodFZhbHVlVmlhQ29vcmRpbmF0ZSA9IHNvbHZlci5pc1JpZ2h0VmFsdWVWaWFDb29yZGluYXRlKFxuICAgICAgcm93LFxuICAgICAgY29sdW1uLFxuICAgICAgdmFsdWVcbiAgICApO1xuXG4gICAgaWYgKGlzUmlnaHRWYWx1ZVZpYUNvb3JkaW5hdGUgPT09IHRydWUpIHtcbiAgICAgIHJldHVybiByZXMuc2VuZCh7XG4gICAgICAgIHZhbGlkOiB0cnVlLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgbGV0IHJlYXNvbiA9IHNvbHZlci5pc1ZhbGlkUmVzdWx0O1xuXG4gICAgaWYgKHJlYXNvbltcImNvbmZsaWN0Um93XCJdKSB7XG4gICAgICBjb25mbGljdEFycmF5LnB1c2goXCJyb3dcIik7XG4gICAgfVxuXG4gICAgaWYgKHJlYXNvbltcImNvbmZsaWN0Q29sXCJdKSB7XG4gICAgICBjb25mbGljdEFycmF5LnB1c2goXCJjb2x1bW5cIik7XG4gICAgfVxuXG4gICAgaWYgKHJlYXNvbltcImNvbmZsaWN0R3JpZFwiXSkge1xuICAgICAgY29uZmxpY3RBcnJheS5wdXNoKFwicmVnaW9uXCIpO1xuICAgIH1cblxuICAgIHJldHVybiByZXMuc2VuZCh7XG4gICAgICB2YWxpZDogZmFsc2UsXG4gICAgICBjb25mbGljdDogY29uZmxpY3RBcnJheSxcbiAgICB9KTtcbiAgfSk7XG5cbiAgYXBwLnJvdXRlKFwiL2FwaS9zb2x2ZVwiKS5wb3N0KChyZXEsIHJlcykgPT4ge1xuICAgIGlmICghcmVxLmJvZHkucHV6emxlKSB7XG4gICAgICByZXR1cm4gcmVzLnNlbmQoe1xuICAgICAgICBlcnJvcjogXCJSZXF1aXJlZCBmaWVsZCBtaXNzaW5nXCIsXG4gICAgICB9KTtcbiAgICB9XG4gICAgbGV0IHB1enpsZVN0cmluZyA9IHJlcS5ib2R5LnB1enpsZTtcbiAgICBjb25zdCB2YWxpZGF0ZVJlc3VsdCA9IFNvbHZlci5pc1ZhbGlkUHV6emxlU3RyaW5nKHB1enpsZVN0cmluZyk7XG5cbiAgICBpZiAodmFsaWRhdGVSZXN1bHQgPT09IHRydWUpIHtcbiAgICAgIGxldCBncmlkID0gU29sdmVyLmNvbnZlcnRUb0dyaWQocHV6emxlU3RyaW5nKTtcbiAgICAgIGxldCBzb2x2ZXIgPSBuZXcgU29sdmVyKGdyaWQpO1xuXG4gICAgICBpZiAoc29sdmVyLnNvbHZlKHB1enpsZVN0cmluZykpIHtcbiAgICAgICAgbGV0IHNvbHV0aW9uID0gc29sdmVyLmdldFNvbHZlZFB1enpsZVN0cmluZygpO1xuICAgICAgICByZXR1cm4gcmVzLnNlbmQoe1xuICAgICAgICAgIHNvbHV0aW9uOiBzb2x1dGlvbixcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gcmVzLnNlbmQoe1xuICAgICAgICAgIGVycm9yOiBcIlB1enpsZSBjYW5ub3QgYmUgc29sdmVkXCIsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlcy5zZW5kKHtcbiAgICAgIGVycm9yOiB2YWxpZGF0ZVJlc3VsdCxcbiAgICB9KTtcbiAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "puzzlesAndSolutions",
        "require",
        "Solver",
        "module",
        "exports",
        "app",
        "route",
        "post",
        "req",
        "res",
        "Rows",
        "puzzle",
        "coordinate",
        "value",
        "body",
        "conflictArray",
        "send",
        "error",
        "row",
        "column",
        "Number",
        "argumentValidator",
        "isValidPuzzleString",
        "grid",
        "convertToGrid",
        "solver",
        "isRightValueViaCoordinate",
        "valid",
        "reason",
        "isValidResult",
        "push",
        "conflict",
        "puzzleString",
        "validateResult",
        "solve",
        "solution",
        "getSolvedPuzzleString"
      ],
      "mappings": "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",
      "sourceRoot": "/home/deluxe/Documents/programs/sudoku-solver/routes/",
      "sourcesContent": [
        "\"use strict\";\n\nconst puzzlesAndSolutions = require(\"../controllers/puzzle-strings\");\nconst Solver = require(\"../controllers/sudoku-solver.js\");\nmodule.exports = function (app) {\n  app.route(\"/api/check\").post((req, res) => {\n    const Rows = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n    let { puzzle, coordinate, value } = req.body;\n    let conflictArray = [];\n\n    if (!puzzle || !coordinate || !value) {\n      return res.send({\n        error: \"Required field(s) missing\",\n      });\n    }\n\n    debugger;\n    //coordinate is a letter A-I followed by number 1-9\n    let row = coordinate[0];\n    let column = Number(coordinate[1]);\n    value = Number(value);\n\n    let argumentValidator = Solver.argumentValidator(row, column, value, Rows);\n    if (argumentValidator !== true) {\n      return res.send({\n        error: argumentValidator,\n      });\n    }\n\n    if (Solver.isValidPuzzleString(puzzle) !== true) {\n      return res.send({\n        error: Solver.isValidPuzzleString(puzzle),\n      });\n    }\n\n    let grid = Solver.convertToGrid(puzzle);\n    let solver = new Solver(grid);\n\n    let isRightValueViaCoordinate = solver.isRightValueViaCoordinate(\n      row,\n      column,\n      value\n    );\n\n    if (isRightValueViaCoordinate === true) {\n      return res.send({\n        valid: true,\n      });\n    }\n\n    let reason = solver.isValidResult;\n\n    if (reason[\"conflictRow\"]) {\n      conflictArray.push(\"row\");\n    }\n\n    if (reason[\"conflictCol\"]) {\n      conflictArray.push(\"column\");\n    }\n\n    if (reason[\"conflictGrid\"]) {\n      conflictArray.push(\"region\");\n    }\n\n    return res.send({\n      valid: false,\n      conflict: conflictArray,\n    });\n  });\n\n  app.route(\"/api/solve\").post((req, res) => {\n    if (!req.body.puzzle) {\n      return res.send({\n        error: \"Required field missing\",\n      });\n    }\n    let puzzleString = req.body.puzzle;\n    const validateResult = Solver.isValidPuzzleString(puzzleString);\n\n    if (validateResult === true) {\n      let grid = Solver.convertToGrid(puzzleString);\n      let solver = new Solver(grid);\n\n      if (solver.solve(puzzleString)) {\n        let solution = solver.getSolvedPuzzleString();\n        return res.send({\n          solution: solution,\n        });\n      } else {\n        return res.send({\n          error: \"Puzzle cannot be solved\",\n        });\n      }\n    }\n\n    res.send({\n      error: validateResult,\n    });\n  });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615923334488
  }
}